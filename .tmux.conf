# ------------------------------------------------------------------------------------
# Setup Window and Pane Numbering {{{ 
# ------------------------------------------------------------------------------------

set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# }}}
# ------------------------------------------------------------------------------------
# Statusbar Setup {{{Â 
# ------------------------------------------------------------------------------------
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set -g status-left " "
set -g status-justify left
setw -g window-status-format         ' #W ' 
setw -g window-status-current-format ' #W '
set -g status-right " "

# }}}
# ------------------------------------------------------------------------------------
# Setup Keybindings {{{
# ------------------------------------------------------------------------------------

# rebind Ctrl+B to Ctrl+A 
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# make reloading the tmux.conf possible 
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status
bind-key -n S-Left previous-window
bind-key -n S-Right next-window


# }}}
# ------------------------------------------------------------------------------------
# OSX Copy-paste integration {{{
# ------------------------------------------------------------------------------------

bind-key 'v' copy-mode

set-option -g default-command "reattach-to-user-namespace -l zsh"

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi Escape send -X clear-selection-and-cancel
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy" \; display-message "copied" \; send -X cancel
bind-key 'p' run-shell "tmux set-buffer "$(pbpaste)"; tmux paste-buffer"

bind-key -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "reattach-to-user-namespace pbcopy" \; display-message "copied" \; send -X cancel


# }}}
# ------------------------------------------------------------------------------------

set -wg mouse on

# Make esc happen immediately
set -s escape-time 0


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l



# ------------------------------------------------------------------------------------
# vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker :
